-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public."Versiones"
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    nombre character varying COLLATE pg_catalog."default" NOT NULL,
    plantilla bigint NOT NULL,
    CONSTRAINT "Versiones_pkey" PRIMARY KEY (id),
    CONSTRAINT "Versiones_plantilla_fkey" FOREIGN KEY (plantilla)
        REFERENCES public."Plantillas" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Versiones"
    OWNER to postgres;

ALTER TABLE IF EXISTS public."Versiones"
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public."Versiones" TO anon;

GRANT ALL ON TABLE public."Versiones" TO authenticated;

GRANT ALL ON TABLE public."Versiones" TO postgres;

GRANT ALL ON TABLE public."Versiones" TO service_role;

COMMENT ON TABLE public."Versiones"
    IS 'Versiones de las distintas plantillas';
CREATE POLICY "Permitir la lectura a usuarios autenticados"
    ON public."Versiones"
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING ((auth.role() = 'authenticated'::text));

ALTER TABLE IF EXISTS public."Instancias"
    ADD COLUMN id_version bigint NOT NULL;

ALTER TABLE IF EXISTS public."Instancias"
    ADD COLUMN token uuid NOT NULL DEFAULT uuid_generate_v4();

ALTER TABLE IF EXISTS public."Instancias"
    ADD CONSTRAINT "Instancias_id_version_fkey" FOREIGN KEY (id_version)
    REFERENCES public."Versiones" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
